<?php

namespace Brasa\RecursoHumanoBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RhuCreditoRepository extends EntityRepository {
    
    public function listaDQL($strIdentificacion = "", $strDesde = "", $strHasta = "", $estadoPagado = "") {        
        $em = $this->getEntityManager();
        $dql   = "SELECT c, e FROM BrasaRecursoHumanoBundle:RhuCredito c JOIN c.empleadoRel e WHERE c.codigoCreditoPk <> 0 AND c.estadoPagado <> 1";   
        if($strIdentificacion != "" ) {
            $dql .= " AND e.numeroIdentificacion = '" . $strIdentificacion . "'";
        }
        if($strDesde != "" || $strDesde != '0'){
            //$strDesde = new \DateTime($strDesde);
            $dql .= " AND c.fechaInicio >='" . $strDesde . "'";
        }
        if($strHasta != "" || $strHasta != '0') {
            //$strHasta = new \DateTime($strHasta);
            $dql .= " AND c.fechaInicio <='" . $strHasta . "'";
        }
        if($estadoPagado == 1 ) {
            $dql .= " AND c.estadoPagado = 1";
        }
        if($estadoPagado == "0") {
            $dql .= " AND c.estadoPagado = 0";
        }        
        //$dql .= " ORDER BY p.empleadoRel.nombreCorto";
        return $dql;
    }
    
    public function listaCreditoDQL($strIdentificacion = "", $strDesde = "", $strHasta = "", $estadoPagado = "") {        
        $em = $this->getEntityManager();
        $dql   = "SELECT c, e FROM BrasaRecursoHumanoBundle:RhuCredito c JOIN c.empleadoRel e WHERE c.codigoCreditoPk <> 0";
           
        if($strIdentificacion != "") {
            $dql .= " AND e.numeroIdentificacion = '" . $strIdentificacion . "'";
        }
        if ($strDesde != "" ){
            $dql .= " AND c.fechaInicio >='" . $strDesde . "'";
        }
        if($strHasta != "" ) {
            $dql .= " AND c.fechaInicio <='" . $strHasta . "'";
        }
        if($estadoPagado == 1 ) {
            $dql .= " AND c.estadoPagado = 1";
        }
        if($estadoPagado == "0") {
            $dql .= " AND c.estadoPagado = 0";
        }         
        $dql .= " ORDER BY c.codigoCreditoPk DESC";
        return $dql;
    }
    
    public function fechaAntigua() {        
        $em = $this->getEntityManager();
        $dql   = "SELECT min(c.fecha) FROM BrasaRecursoHumanoBundle:RhuCredito c WHERE c.estadoPagado <> 1";
        $query = $em->createQuery($dql);
        $fechaAntigua = $query->getSingleScalarResult(); 
        return $fechaAntigua;
    }
    
    public function fechaAntiguaCredito() {        
        $em = $this->getEntityManager();
        $dql   = "SELECT min(c.fecha) FROM BrasaRecursoHumanoBundle:RhuCredito c";
        $query = $em->createQuery($dql);
        $fechaAntigua = $query->getSingleScalarResult(); 
        return $fechaAntigua;
    }

    /**
     * Devuelve el total de la cuota de los creditos de un empleado.
     * 
     * @author		Mario Estrada
     * 
     * @param integer	Codigo del empleado
     * @return float    Valor de la cuota
     */    
    public function cuotaCreditosNomina($codigoEmpleado) {
        $em = $this->getEntityManager();                
        $dql   = "SELECT SUM(c.vrCuota) FROM BrasaRecursoHumanoBundle:RhuCredito c "
                . "WHERE c.codigoEmpleadoFk = " . $codigoEmpleado . " "
                . "AND c.codigoCreditoTipoPagoFk = 1 "
                . "AND c.estadoPagado = 0 "
                . "AND c.estadoSuspendido = 0";
        $query = $em->createQuery($dql);
        $floCuota = $query->getSingleScalarResult();
        return $floCuota;        
    } 
    
    /**
     * Devuelve los creditos pendientes de un empleado.
     * 
     * @author		Mario Estrada
     * 
     * @param integer	Codigo del empleado
     * @return objeto   Clase creditos
     */         
    
    public function pendientes($codigoEmpleado = "") {        
        $em = $this->getEntityManager();
        $dql   = "SELECT c FROM BrasaRecursoHumanoBundle:RhuCredito c "
                . "WHERE c.saldo > 0 "
                . "AND c.codigoEmpleadoFk = " . $codigoEmpleado;
        $query = $em->createQuery($dql);
        $arCreditos = $query->getResult();
        return $arCreditos;
    }
    
    public function TotalPendientes($codigoEmpleado = "") {        
        $em = $this->getEntityManager();
        $dql   = "SELECT SUM(c.saldo) FROM BrasaRecursoHumanoBundle:RhuCredito c "
                . "WHERE c.saldoTotal > 0 "
                . "AND c.codigoEmpleadoFk = " . $codigoEmpleado;
        $query = $em->createQuery($dql);
        $arCreditos = $query->getResult();
        return $arCreditos;
    }
}