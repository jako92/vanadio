<?php

namespace Brasa\RecursoHumanoBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RhuPrestacionRepository extends EntityRepository {    
    public function generar() {
        $em = $this->getEntityManager();
        $arConfiguracion = $em->getRepository('BrasaRecursoHumanoBundle:RhuConfiguracion')->find(1);
        $dql   = "SELECT c FROM BrasaRecursoHumanoBundle:RhuContrato c "
            . "WHERE c.estadoActivo = 1";           
        $arContratos = new \Brasa\RecursoHumanoBundle\Entity\RhuContrato();
        $query = $em->createQuery($dql)/*->setMaxResults(1)*/;
        $arContratos = $query->getResult();
        foreach ($arContratos as $arContrato) {
            $fechaHasta = date_create('2016-12-30');            
            $arPrestacion = new \Brasa\RecursoHumanoBundle\Entity\RhuPrestacion;
            $arPrestacion->setEmpleadoRel($arContrato->getEmpleadoRel());
            $arPrestacion->setContratoRel($arContrato);
            $arPrestacion->setCentroCostoRel($arContrato->getCentroCostoRel());
            //Vacaciones
            $arrVacacion = $em->getRepository('BrasaRecursoHumanoBundle:RhuPrestacion')->liquidarVacacion($fechaHasta, $arContrato);                        
            $arPrestacion->setDiasVacaciones($arrVacacion['dias']);
            $arPrestacion->setVrSalarioVacaciones($arrVacacion['salarioPromedio']);
            $arPrestacion->setVrVacaciones($arrVacacion['totalVacacion']);
            
            $em->persist($arPrestacion);
            //$arrCesantia = $em->getRepository('BrasaRecursoHumanoBundle:RhuPrestacion')->liquidarCesantia($fechaHasta, $arContrato, $arConfiguracion);                                    
            
        }
        $em->flush();        
    }
    
    public function liquidarVacacion($fechaHasta, $arContrato) {        
        $em = $this->getEntityManager();
        $objFunciones = new \Brasa\GeneralBundle\MisClases\Funciones();        
        $fechaDesdePeriodo = $arContrato->getFechaUltimoPagoVacaciones();
        if ($fechaDesdePeriodo == null){
            $fechaDesdePeriodo = $arContrato->getFechaDesde();
        }
        $fechaHastaPeriodo = $fechaHasta;        
        $dias = $objFunciones->diasPrestaciones($fechaDesdePeriodo, $fechaHastaPeriodo);                     
        $diasVacacion = $dias / 24;          
        $meses = $dias / 30;
        $salario = $arContrato->getVrSalario();                   
        $recargosNocturnos = $em->getRepository('BrasaRecursoHumanoBundle:RhuPagoDetalle')->recargosNocturnos($fechaDesdePeriodo->format('Y-m-d'), $fechaHastaPeriodo->format('Y-m-d'), $arContrato->getCodigoContratoPk());                    
        $promedioRecargosNocturnos = 0;
        if($meses > 0) {
            $promedioRecargosNocturnos = $recargosNocturnos / $meses;               
            $promedioRecargosNocturnos = round($promedioRecargosNocturnos);            
        }
        
        if($arContrato->getCodigoSalarioTipoFk() == 1) {
            $salarioPromedio = $arContrato->getVrSalario();
        } else {            
            $salarioPromedio = $arContrato->getVrSalario() + $promedioRecargosNocturnos;
        }       

        $totalVacacion = $salarioPromedio / 30 * $diasVacacion;
        $arrVacacion = array('dias' => $diasVacacion,
                             'salarioPromedio' => $salarioPromedio,
                             'totalVacacion' => $totalVacacion);
        return $arrVacacion;
    }
    
    public function liquidarCesantia($fechaHasta, $arContrato, $arConfiguracion) {        
        $em = $this->getEntityManager();
        $objFunciones = new \Brasa\GeneralBundle\MisClases\Funciones();
        $arParametrosPrestacion = new \Brasa\RecursoHumanoBundle\Entity\RhuParametroPrestacion();
        $arParametrosPrestacion = $em->getRepository('BrasaRecursoHumanoBundle:RhuParametroPrestacion')->findBy(array('tipo' => 'CES'));                                                                
        $salarioMinimo = $arConfiguracion->getVrSalario();
        $auxilioTransporte = $arConfiguracion->getVrAuxilioTransporte();            
        $intDiasCesantiaLiquidar = 0;
        $diasAusentismo = 0;
        $salarioPromedioCesantias = 0;
        $totalCesantia = 0;
        $douInteresesCesantias = 0;
        if($arContrato->getSalarioIntegral() == 0) {        
            $dateFechaDesde = $arContrato->getFechaUltimoPagoCesantias();
            $dateFechaHasta = $fechaHasta;
            $dateFechaHastaPago = $arContrato->getFechaUltimoPago();
            if($dateFechaHastaPago > $dateFechaHasta) {
                $dateFechaHastaPago = $dateFechaHasta;
            }
            $douSalario = $arContrato->getVrSalarioPago();
            $intDiasCesantia = 0;                                
            $intDiasCesantia = $objFunciones->diasPrestaciones($dateFechaDesde, $dateFechaHasta);
            $intDiasSalrioPromedio = $objFunciones->diasPrestaciones($dateFechaDesde, $dateFechaHastaPago);
            $intDiasCesantiaLiquidar = $intDiasCesantia;
            $ibpCesantiasInicial = $arContrato->getIbpCesantiasInicial();                    
            $ibpCesantias = $em->getRepository('BrasaRecursoHumanoBundle:RhuPagoDetalle')->ibp($dateFechaDesde->format('Y-m-d'), $dateFechaHastaPago->format('Y-m-d'), $arContrato->getCodigoContratoPk());                
            $ibpCesantias += $ibpCesantiasInicial;                                            
            $salarioPromedioCesantias = 0;
            if($arContrato->getCodigoSalarioTipoFk() == 2) {
                if($intDiasSalrioPromedio > 0) {
                    $salarioPromedioCesantias = ($ibpCesantias / $intDiasSalrioPromedio) * 30;     
                } else {
                    if($arContrato->getEmpleadoRel()->getAuxilioTransporte() == 1) {
                        $salarioPromedioCesantias = $douSalario + $auxilioTransporte;
                    } else {
                        $salarioPromedioCesantias = $douSalario;
                    }                         
                }                                                        
            } else {
                //Comisiones
                $ibpConceptos = $em->getRepository('BrasaRecursoHumanoBundle:RhuPagoDetalle')->ibpConceptos($dateFechaDesde->format('Y-m-d'), $dateFechaHastaPago->format('Y-m-d'), $arContrato->getCodigoContratoPk());                
                $otrosConceptos = 0;
                if($intDiasSalrioPromedio > 0) {
                    $otrosConceptos = ($ibpConceptos / $intDiasSalrioPromedio) * 30;
                }                    
                if($arContrato->getEmpleadoRel()->getAuxilioTransporte() == 1) {
                    $salarioPromedioCesantias = $douSalario + $auxilioTransporte + $otrosConceptos;
                } else {
                    $salarioPromedioCesantias = $douSalario + $otrosConceptos;
                }                                                
            }      
            $aplicaPorcentaje = true;
            if($arContrato->getEmpleadoRel()->getPagadoEntidadSalud()) {
                $salarioPromedioCesantias = $douSalario;
                $aplicaPorcentaje = false;                
            }                 
            $porcentaje = 100;                                               
            if($arConfiguracion->getPrestacionesAplicaPorcentajeSalario()) {                            
                if($arContrato->getCodigoSalarioTipoFk() == 2 && $aplicaPorcentaje) {                                    
                    $intDiasLaborados = $em->getRepository('BrasaRecursoHumanoBundle:RhuLiquidacion')->diasPrestaciones($arContrato->getFechaDesde(), $dateFechaHasta);                                
                    foreach ($arParametrosPrestacion as $arParametroPrestacion) {
                        if($intDiasLaborados >= $arParametroPrestacion->getDiaDesde() && $intDiasLaborados <= $arParametroPrestacion->getDiaHasta()) {
                            if($arParametroPrestacion->getOrigen() == 'SAL') {
                                if($arContrato->getEmpleadoRel()->getAuxilioTransporte() == 1) {
                                    $salarioPromedioCesantias = $douSalario + $auxilioTransporte;
                                } else {
                                    $salarioPromedioCesantias = $douSalario;
                                } 
                            } else {
                                $porcentaje = $arParametroPrestacion->getPorcentaje();
                                $salarioPromedioCesantias = ($salarioPromedioCesantias * $porcentaje)/100;                                
                            }                                            
                        }
                    }                               
                }                                                        
            }                   
            $diasAusentismo = $em->getRepository('BrasaRecursoHumanoBundle:RhuPago')->diasAusentismo($dateFechaDesde->format('Y-m-d'), $dateFechaHasta->format('Y-m-d'), $arContrato->getCodigoContratoPk());                                                               
            if($salarioPromedioCesantias < $salarioMinimo) {
                if($arContrato->getEmpleadoRel()->getAuxilioTransporte() == 1) {
                    $salarioPromedioCesantias = $douSalario + $auxilioTransporte;
                } else {
                    $salarioPromedioCesantias = $douSalario;
                }                                
            }                
            $salarioPromedioCesantias = round($salarioPromedioCesantias);            
            $dias = $intDiasCesantiaLiquidar - $diasAusentismo;            
            $totalCesantia = ($salarioPromedioCesantias * $dias) / 360;            
            $porcentajeIntereses = (($dias * 12) / 360)/100;            
            $douInteresesCesantias = $totalCesantia * $porcentajeIntereses;
            $douInteresesCesantias = round($douInteresesCesantias);
            $totalCesantia = round($totalCesantia);           
        }
        $arrCesantia = array('dias' => $intDiasCesantiaLiquidar,
                             'diasAusentismo' => $diasAusentismo,
                             'salarioPromedio' => $salarioPromedioCesantias,
                             'totalCesantia' => $totalCesantia,
                             'totalIntereses' => $douInteresesCesantias);
        return $arrCesantia;
    }    
}