<?php

namespace Brasa\CarteraBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CuentasCobrarRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CarNotaDebitoDetalleRepository extends EntityRepository {

    public function detalleConsultaDql($numero = "", $codigoCliente = "", $codigoCuentaCobrarTipo = "", $strFechaDesde = "", $strFechaHasta = "") {
        $dql = "SELECT ndd FROM BrasaCarteraBundle:CarNotaDebitoDetalle ndd JOIN ndd.notaDebitoRel nd  WHERE ndd.codigoNotaDebitoDetallePk <> 0 ";
        if ($numero != "") {
            $dql .= " AND ndd.numeroFactura = " . $numero;
        }
        if ($codigoCliente != "") {
            $dql .= " AND nd.codigoClienteFk = " . $codigoCliente;
        }
        if ($codigoCuentaCobrarTipo != "") {
            $dql .= " AND ndd.codigoCuentaCobrarTipoFk = " . $codigoCuentaCobrarTipo;
        }
        if ($strFechaDesde != "") {
            $dql .= " AND nd.fecha >='" . $strFechaDesde . "'";
        }
        if ($strFechaHasta != "") {
            $dql .= " AND nd.fecha <='" . $strFechaHasta . "'";
        }
        return $dql;
    }

    public function eliminarSeleccionados($arrSeleccionados) {
        if (count($arrSeleccionados) > 0) {
            $em = $this->getEntityManager();
            foreach ($arrSeleccionados AS $codigo) {
                $arNotaDebitoDetalle = $em->getRepository('BrasaCarteraBundle:CarNotaDebitoDetalle')->find($codigo);
                $em->remove($arNotaDebitoDetalle);
            }
            $em->flush();
        }
    }

    public function numeroRegistros($codigo) {
        $em = $this->getEntityManager();
        $intNumeroRegistros = 0;
        $dql = "SELECT COUNT(ndd.codigoNotaDebitoDetallePk) as numeroRegistros FROM BrasaCarteraBundle:CarNotaDebitoDetalle ndd "
                . "WHERE ndd.codigoNotaDebitoFk = " . $codigo;
        $query = $em->createQuery($dql);
        $arrNotaDebitoDetalles = $query->getSingleResult();
        if ($arrNotaDebitoDetalles) {
            $intNumeroRegistros = $arrNotaDebitoDetalles['numeroRegistros'];
        }
        return $intNumeroRegistros;
    }

    public function liquidar($codigoNotaDebito) {
        $em = $this->getEntityManager();
        $arNotaDebito = new \Brasa\CarteraBundle\Entity\CarNotaDebito();
        $arNotaDebito = $em->getRepository('BrasaCarteraBundle:CarNotaDebito')->find($codigoNotaDebito);
        $intCantidad = 0;
        $floValor = 0;
        $arNotaDebito = $em->getRepository('BrasaCarteraBundle:CarNotaDebito')->find($codigoNotaDebito);
        $arNotaDebitosDetalle = new \Brasa\CarteraBundle\Entity\CarNotaDebitoDetalle();
        $arNotaDebitosDetalle = $em->getRepository('BrasaCarteraBundle:CarNotaDebitoDetalle')->findBy(array('codigoNotaDebitoFk' => $codigoNotaDebito));
        foreach ($arNotaDebitosDetalle as $arNotaDebitoDetalle) {
            $floValor += $arNotaDebitoDetalle->getValor();
        }
        $arNotaDebito->setValor($floValor);
        $em->persist($arNotaDebito);
        $em->flush();
        return true;
    }

    public function validarCuenta($codigoCuenta, $codigoNotaDebito) {
        $em = $this->getEntityManager();
        $boolValidar = TRUE;
        $dql = "SELECT COUNT(ndd.codigoNotaDebitoDetallePk) as numeroRegistros FROM BrasaCarteraBundle:CarNotaDebitoDetalle ndd "
                . "WHERE ndd.codigoCuentaCobrarFk = " . $codigoCuenta . " AND ndd.codigoNotaDebitoFk = " . $codigoNotaDebito;
        $query = $em->createQuery($dql);
        $arrNotaDebitoDetalles = $query->getSingleResult();
        if ($arrNotaDebitoDetalles) {
            $intNumeroRegistros = $arrNotaDebitoDetalles['numeroRegistros'];
            if ($intNumeroRegistros > 0) {
                $boolValidar = FALSE;
            }
        }
        return $boolValidar;
    }

}
