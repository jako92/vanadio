<?php

namespace Brasa\CarteraBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CarReciboRepository extends EntityRepository
{
   public function listaDql($numero, $codigoCliente = "", $boolEstadoImpreso = "") {
        $dql   = "SELECT r FROM BrasaCarteraBundle:CarRecibo r WHERE r.codigoReciboPk <> 0";
        if($numero != "") {
            $dql .= " AND r.numero = " . $numero;  
        }        
        if($codigoCliente != "") {
            $dql .= " AND r.codigoClienteFk = " . $codigoCliente;  
        }    
        if($boolEstadoImpreso == 1 ) {
            $dql .= " AND r.estadoImpreso = 1";
        }
        if($boolEstadoImpreso == "0") {
            $dql .= " AND r.estadoImpreso = 0";
        }        
        $dql .= " ORDER BY r.fecha DESC";
        return $dql;
    }
    
   public function listaConsultaDql($numero = "", $codigoCliente = "", $codigoReciboTipo = "", $strFechaDesde = "", $strFechaHasta = "") {
        $dql   = "SELECT r FROM BrasaCarteraBundle:CarRecibo r WHERE r.codigoReciboPk <> 0 ";
        if($numero != "") {
            $dql .= " AND r.numero = " . $numero;  
        }
        if($codigoCliente != "") {
            $dql .= " AND r.codigoClienteFk = " . $codigoCliente;  
        }
        if($codigoReciboTipo != "") {
            $dql .= " AND r.codigoReciboTipoFk = " . $codigoReciboTipo;  
        }
        if ($strFechaDesde != ""){
            $dql .= " AND r.fecha >='" . $strFechaDesde . "'";
        }
        if($strFechaHasta != "") {
            $dql .= " AND r.fecha <='" . $strFechaHasta . "'";
        }        
        return $dql;
    } 
    
   public function imprimir($codigo) {
        $em = $this->getEntityManager();  
        $objFunciones = new \Brasa\GeneralBundle\MisClases\Funciones();
        $strResultado = "";
        $arRecibo = new \Brasa\CarteraBundle\Entity\CarRecibo();        
        $arRecibo = $em->getRepository('BrasaCarteraBundle:CarRecibo')->find($codigo);        
        if($arRecibo->getEstadoAutorizado() == 1) {
           if($arRecibo->getNumero() == 0) {            
                $intNumero = $em->getRepository('BrasaCarteraBundle:CarConsecutivo')->consecutivo(1);
                $arRecibo->setNumero($intNumero);
                $arRecibo->setEstadoImpreso(1);
                $em->persist($arRecibo);
                $em->flush();
            } 
        } else {
            $strResultado = "Debe autorizar la cotizacion para imprimirla";
        }
        return $strResultado;
    }    
    
   public function eliminar($arrSeleccionados) {
        $em = $this->getEntityManager();
        if(count($arrSeleccionados) > 0) {
            foreach ($arrSeleccionados AS $codigo) {                
                if($em->getRepository('BrasaCarteraBundle:CarReciboDetalle')->numeroRegistros($codigo) <= 0) {
                    $arRecibo = $em->getRepository('BrasaCarteraBundle:CarRecibo')->find($codigo);                    
                    if($arRecibo->getEstadoAutorizado() == 0) {
                        $em->remove($arRecibo);                    
                    }                     
                }               
            }
            $em->flush();
        }
    } 
}